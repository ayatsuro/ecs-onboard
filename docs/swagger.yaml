basePath: /v1
definitions:
  model.IamUser:
    properties:
      namespace:
        type: string
      safe_id:
        type: string
      username:
        type: string
    required:
    - namespace
    - username
    type: object
  model.MigrateNamespace:
    properties:
      namespace:
        type: string
      safe_id:
        type: string
    required:
    - namespace
    type: object
  model.OnboardNamespace:
    properties:
      namespace:
        type: string
      safe_id:
        type: string
      username:
        type: string
    required:
    - namespace
    - username
    type: object
info:
  contact: {}
paths:
  /namespace/migrate:
    post:
      consumes:
      - application/json
      description: If the safe_id is omitted in the payload, it will be derived from
        the namespace name (first part of a split on '-')
      parameters:
      - description: the namespace to migrate
        in: body
        name: ns
        required: true
        schema:
          $ref: '#/definitions/model.MigrateNamespace'
      produces:
      - application/json
      responses: {}
      summary: Fetches all the users of an ECS namespace. For native users, creates
        a IAM user, an access key, stores it in a Vault role, creates a Vault policy.
        For IAM users, creates an access key, stores it in a Vault role, creates a
        Vault policy.
      tags:
      - Namespace
  /namespace/onboard:
    post:
      consumes:
      - application/json
      description: If the safe_id is omitted in the payload, it will be derived from
        the namespace (first part of a split on '-')
      parameters:
      - description: the namespace to onboard
        in: body
        name: ns
        required: true
        schema:
          $ref: '#/definitions/model.OnboardNamespace'
      produces:
      - application/json
      responses: {}
      summary: Creates an IAM user, an access key, stores it in a Vault role, creates
        a Vault policy
      tags:
      - Namespace
  /user:
    post:
      consumes:
      - application/json
      description: If the safe_id is omitted in the payload, it will be derived from
        the namespace name (first part of a split on '-')
      parameters:
      - description: the user to onboard
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.IamUser'
      produces:
      - application/json
      responses: {}
      summary: Creates a IAM user in an ECS namespace, creates an access key, stores
        it in a Vault role, creates a Vault policy. And if the username is a BRID,
        creates a JWT authrole.
      tags:
      - User
  /user/{username}:
    delete:
      parameters:
      - description: the IAM user to delete
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Deletes the IAM user, the Vault role and policy, and the JWT authrole
        if any
      tags:
      - User
swagger: "2.0"
